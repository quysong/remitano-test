import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { prisma } from "../utils/db";

export default function Home(props) {
  console.log('props', props)
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p>
          Get started by editing <code>pages/index.js</code>
        </p>

        <div>
          <Link href="/about">
            <h2>About Page &rarr;</h2>
            <p>Cypress will test if this link is working.</p>
          </Link>

          <a href="https://nextjs.org/docs">
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn">
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a href="https://github.com/vercel/next.js/tree/canary/examples">
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

export async function getServerSideProps({ params, query, ...props }) {
  let page = 1,
    limit = 20;
  try {
    page = query.page ? Number(query.page) : 1;
    limit = query.limit ? Number(query.limit) : 100;
  } catch (error) {
    console.log("error", error);
    page = 1;
    limit = 20;
  }
  const movies = await prisma.movie.findMany({
    skip: page - 1,
    take: limit,
  });
  return {
    props: {
      movies: JSON.parse(JSON.stringify(movies)), //Date type issue
    },
  };
}
